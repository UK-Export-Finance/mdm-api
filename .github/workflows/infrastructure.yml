# This GHA is responsible for `APIM` supporting infrastructure
# creation and configuration using `az cli` bash scripting.
#
# Following Azure services are consumed:
# 1. Azure Container App Environment - https://learn.microsoft.com/en-us/azure/container-apps/environment
#
# Execution
# *********
# GHA is only invoked when following conditions are satisfied:
# 1. Push to the `infrastructure` branch only.
# 2. Exact file path matches `.github/workflows/infrastructure.yml`.

name: Infrastructure 🔨
run-name: APIM base infrastructure build from ${{ github.repository }}

on:
  push:
    branches: [  APIM-149-ia-c-dev-environment ]
    paths: [ .github/workflows/infrastructure.yml ]

env:
  product: APIM
  environment: infrastructure
  timezone: 'Europe/London'
  # Deployment environment target i.e., `dev`, `staging`, `prod` 
  target: ${{ vars.environment }}

jobs:

# 1. Setup infrastructure variables
  setup:
    name: Setup 🔧
    runs-on: [ self-hosted, APIM, infrastructure ]
    outputs:
      environment: ${{ env.environment }}
      timezone: ${{ env.timezone }}
      type: preprod
    steps:
    - name: Environment 🧪
      run: echo "Environment set to ${{ env.environment }}"

    - name: Timezone 🌐
      run: echo "Timezone set to ${{ env.timezone }}"

# 2. Base infrastructure creation
  base:
    name: Base 🧱
    needs: setup
    environment: ${{ needs.setup.outputs.environment }}
    runs-on: [ self-hosted, APIM, infrastructure ]
    steps:

    - name: Azure Login 🔐
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Defaults ✨
      uses: azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=${{ vars.REGION }}
          az configure --defaults group=${{ vars.GROUP }}

    - name: Resource Group 🏗️
      uses: azure/cli@v1.0.0
      with:
        inlineScript: az group create --location ${{ vars.REGION }} --name rg-${{ env.product }}-${{ needs.setup.outputs.type }}-001 \
          --tags "Environment=${{ needs.setup.outputs.type }}" \
          --tags "Product=${{ env.product }}"
